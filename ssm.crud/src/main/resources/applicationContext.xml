<?xml version="1.0" encoding="UTF-8"?>
<!-- Spring配置文件重点(数据源,与mybatis的整合,事务控制 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 扫描注解 除了控制器 -->
	<context:component-scan base-package="com.at">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 引入配置文件 -->
	<context:property-placeholder
		location="classpath:dbconfig.properties" />
	<!-- 配置数据源 -->
	<bean id="pooleDataSource"
		class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="driverClass" value="${jdbc.dirverClass}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 配置整合mybatis -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 指定mybatis全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="pooleDataSource"></property>
		<!-- 指定mapper文件的位置 -->
		<property name="mapperLocations"
			value="classpath:mapper/*.xml"></property>
	</bean>

	<!-- 配置扫描器，把mybatis的接口实现扫描到ioc中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.at.crud.dao"></property>
	</bean>
	
	<!-- 配置一个可以批量生成的sqlSession -->
	<bean id = "sqlSession" class = "org.mybatis.spring.SqlSessionTemplate">
	<!-- 指定构造器 -->
	<constructor-arg name = "sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	<constructor-arg name = "executorType" value = "BATCH"></constructor-arg>
	</bean>
	
	<!-- 配置事务控制 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="pooleDataSource" ></property>
	</bean>
	
	<!-- 开启增强 -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut
			expression="execution(* com.at.crud.service..*(..))" id="txPoint" />
		<!-- 配置切入增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint" />
	</aop:config>
	
	<!-- 事务增强,事务如何切入 -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事务方法 -->
			<tx:method name="*" />
			<!-- 以get开头的方法都是查询方法 read-only 开启调优 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>